(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[41],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/video/VideoChat.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/video/VideoChat.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'video-chat',\n  data: function data() {\n    return {\n      tc: {\n        accessManager: null,\n        messagingClient: null,\n        channel: [],\n        generalChannel: null,\n        username: '',\n        channelArray: [],\n        currentChannel: null,\n        activeChannelIndex: null,\n        messagesArray: []\n      },\n      accessToken: '',\n      roomSid: '',\n      name: this.$route.params.roomName,\n      username: '',\n      connected: false,\n      selected: false,\n      showMessages: false,\n      moment: moment,\n      message: null,\n      userNotJoined: true,\n      newChannel: '',\n      showAddChannelInput: false,\n      notification: false,\n      notificationMsg: ''\n    };\n  },\n  methods: {\n    //CHAT METHODS\n    connectClientWithUsername: function connectClientWithUsername() {\n      if (this.username == '') {\n        alert('Username cannot be empty');\n        return;\n      }\n\n      this.tc.username = this.username;\n      this.fetchAccessToken(this.tc.username, this.connectMessagingClient);\n    },\n    fetchAccessToken: function fetchAccessToken(username, handler) {\n      var vm = this;\n      axios.post('/api/video/chat', {\n        identity: this.tc.username,\n        device: 'browser'\n      }).then(function (response) {\n        handler(response.data);\n        vm.username = '';\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    },\n    connectMessagingClient: function connectMessagingClient(token) {\n      // Initialize the Chat messaging client\n      var vm = this;\n      this.tc.accessManager = new Twilio.AccessManager(token);\n      new Twilio.Chat.Client.create(token).then(function (client) {\n        vm.tc.messagingClient = client;\n        vm.updateConnectedUI();\n        vm.loadChannelList(vm.joinGeneralChannel);\n        vm.tc.messagingClient.on('channelAdded', _.throttle(vm.loadChannelList));\n        vm.tc.messagingClient.on('channelRemoved', _.throttle(vm.loadChannelList));\n        vm.tc.messagingClient.on('tokenExpired', vm.refreshToken);\n      });\n    },\n    updateConnectedUI: function updateConnectedUI() {\n      this.connected = true;\n    },\n    refreshToken: function refreshToken() {\n      this.fetchAccessToken(this.tc.username, vm.setNewToken);\n    },\n    setNewToken: function setNewToken(tokenResponse) {\n      this.tc.accessManager.updateToken(tokenResponse.token);\n    },\n    loadChannelList: function loadChannelList(handler) {\n      if (this.tc.messagingClient === undefined) {\n        console.log('Client is not initialized');\n        return;\n      }\n\n      this.getVisibleChannels(this.tc.messagingClient, handler);\n    },\n    getVisibleChannels: function getVisibleChannels(messagingClient, handler) {\n      var vm = this;\n      messagingClient.getPublicChannelDescriptors().then(function (channels) {\n        vm.tc.channelArray = vm.sortChannelsByName(channels.items);\n        vm.tc.channelArray.forEach(vm.addChannel);\n\n        if (typeof handler === 'function') {\n          handler();\n        }\n      });\n    },\n    sortChannelsByName: function sortChannelsByName(channels) {\n      return channels.sort(function (a, b) {\n        if (a.friendlyName === 'general') {\n          return -1;\n        }\n\n        if (b.friendlyName === 'General Channel') {\n          return 1;\n        }\n\n        return a.friendlyName.localeCompare(b.friendlyName);\n      });\n    },\n    joinGeneralChannel: function joinGeneralChannel() {\n      console.log('Attempting to join \"general\" chat channel...');\n      var vm = this;\n\n      if (this.tc.generalChannel == null) {\n        // If it doesn't exist, let's create it\n        this.tc.messagingClient.createChannel({\n          uniqueName: 'general',\n          friendlyName: 'General Channel'\n        }).then(function (channel) {\n          console.log('Created general channel');\n          vm.tc.generalChannel = channel;\n          vm.loadChannelList(vm.joinGeneralChannel);\n        });\n      } else {\n        console.log('Found general channel:');\n        this.setupChannel(this.tc.generalChannel);\n      }\n    },\n    addChannel: function addChannel(channel) {\n      if (channel.uniqueName === 'general') {\n        this.tc.generalChannel = channel;\n      }\n    },\n    setupChannel: function setupChannel(channel) {\n      var vm = this;\n      return this.leaveCurrentChannel().then(function () {\n        return vm.initChannel(channel);\n      }).then(function (_channel) {\n        return vm.joinChannel(_channel);\n      }).then(this.initChannelEvents);\n    },\n    leaveCurrentChannel: function leaveCurrentChannel() {\n      var vm = this;\n\n      if (this.tc.currentChannel) {\n        return this.tc.currentChannel.leave().then(function (leftChannel) {\n          console.log('left ' + leftChannel.friendlyName);\n          leftChannel.removeListener('messageAdded', vm.addMessageToList);\n          leftChannel.removeListener('typingStarted', vm.showTypingStarted);\n          leftChannel.removeListener('typingEnded', vm.hideTypingStarted);\n          leftChannel.removeListener('memberJoined', vm.notifyMemberJoined);\n          leftChannel.removeListener('memberLeft', vm.notifyMemberLeft);\n        });\n      } else {\n        console.log(\"resolving\");\n        return Promise.resolve();\n      }\n    },\n    initChannel: function initChannel(channel) {\n      console.log('Initialized channel ' + channel.friendlyName);\n      return this.tc.messagingClient.getChannelBySid(channel.sid);\n    },\n    initChannelEvents: function initChannelEvents() {\n      console.log(this.tc.currentChannel.friendlyName + ' ready.');\n      this.tc.currentChannel.on('messageAdded', this.addMessageToList);\n      this.tc.currentChannel.on('typingStarted', this.showTypingStarted);\n      this.tc.currentChannel.on('typingEnded', this.hideTypingStarted);\n      this.tc.currentChannel.on('memberJoined', this.notifyMemberJoined);\n      this.tc.currentChannel.on('memberLeft', this.notifyMemberLeft); // $inputText.prop('disabled', false).focus();\n    },\n    showTypingStarted: function showTypingStarted(member) {\n      console.log(member.identity + ' is typing...');\n      this.notificationMsg = member.identity + ' is typing...';\n      this.notification = true;\n    },\n    hideTypingStarted: function hideTypingStarted(member) {\n      this.notificationMsg = '';\n      this.notification = false;\n    },\n    notifyMemberJoined: function notifyMemberJoined(member) {\n      console.log(\"joining\");\n      console.log(member.identity + ' joined the channel'); // notify(member.identity + ' joined the channel')\n    },\n    notifyMemberLeft: function notifyMemberLeft(member) {\n      console.log(\"leaving\");\n      console.log(member);\n      console.log(member.identity + ' left the channel'); // notify(member.identity + ' left the channel');\n    },\n    notify: function notify(message) {\n      var row = $('<div>').addClass('col-md-12');\n      row.loadTemplate('#member-notification-template', {\n        status: message\n      });\n      tc.$messageList.append(row);\n      scrollToMessageListBottom();\n    },\n    joinChannel: function joinChannel(_channel) {\n      console.log(_channel);\n      var vm = this;\n      return _channel.join().then(function (joinedChannel) {\n        console.log('Joined channel ' + joinedChannel.friendlyName);\n        vm.updateChannelUI(_channel);\n        vm.tc.currentChannel = _channel;\n        vm.loadMessages();\n        return joinedChannel;\n      })[\"catch\"](function (err) {\n        alert(\"Couldn't join channel \" + _channel.friendlyName + ' because ' + err);\n      });\n    },\n    updateChannelUI: function updateChannelUI(selectedChannel) {\n      var channelLists = this.$refs.channelList;\n      var activeChannelList = channelLists.filter(function (element) {\n        return element.dataset.sid === selectedChannel.sid;\n      });\n      activeChannelList = activeChannelList[0];\n\n      if (this.tc.currentChannelContainer === undefined && selectedChannel.uniqueName === 'general') {\n        this.tc.currentChannelContainer = activeChannelList;\n      }\n\n      this.tc.currentChannelContainer.classList.remove('selected-channel');\n      this.tc.currentChannelContainer = activeChannelList;\n      this.tc.currentChannelContainer.classList.add('selected-channel');\n    },\n    loadMessages: function loadMessages() {\n      var vm = this;\n      this.tc.currentChannel.getMessages(50).then(function (messages) {\n        vm.showMessages = true;\n        vm.tc.messagesArray = messages.items;\n        vm.userNotJoined = false; // messages.items.forEach(vm.addMessageToList);\n      });\n    },\n    addMessageToList: function addMessageToList(message) {\n      console.log(message);\n      this.loadMessages();\n    },\n    handleInputTextKeypress: function handleInputTextKeypress() {\n      var vm = this;\n      this.tc.currentChannel.sendMessage(this.message);\n      this.message = ''; // setTimeout(function(){\n      //    vm.loadMessages();\n      //  }, 3000);\n    },\n    handleNewChannelInputKeypress: function handleNewChannelInputKeypress(event) {\n      var vm = this;\n\n      if (this.newChannel == '') {\n        alert('Channel name cannot be empty');\n        return;\n      }\n\n      this.tc.messagingClient.createChannel({\n        friendlyName: this.newChannel\n      }).then(function (channel) {\n        console.log('Created channel');\n        vm.loadChannelList(channel);\n      }).then(this.hideAddChannelInput);\n      this.newChannel = '';\n    },\n    selectChannel: function selectChannel(channel) {\n      var channelSid = channel.sid;\n      var selectedChannel = this.tc.channelArray.filter(function (channel) {\n        return channel.sid === channelSid;\n      })[0];\n\n      if (selectedChannel === this.tc.currentChannel) {\n        return;\n      }\n\n      this.setupChannel(selectedChannel);\n    },\n    hideAddChannelInput: function hideAddChannelInput() {\n      this.showAddChannelInput = false;\n    },\n    createChannel: function createChannel() {\n      this.showAddChannelInput = true;\n    },\n    deleteChannel: function deleteChannel() {\n      if (this.tc.currentChannel.sid === this.tc.generalChannel.sid) {\n        alert('You cannot delete the general channel');\n        return;\n      }\n\n      this.tc.currentChannel[\"delete\"]().then(function (channel) {\n        console.log('channel: ' + channel.friendlyName + ' deleted');\n        setupChannel(this.tc.generalChannel);\n      });\n    },\n    //VIDEO METHODS\n    getVideoToken: function getVideoToken() {\n      console.log('Video chat room loading...');\n\n      var _this = this;\n\n      var axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\"); // Request a new token\n\n\n      axios.get(\"/api/video/access_token/\".concat(this.name)).then(function (response) {\n        _this.accessToken = response.data;\n      })[\"catch\"](function (error) {\n        console.log(error);\n      }).then(function () {\n        _this.connectToRoom();\n      });\n    },\n    joinAsParticipant: function joinAsParticipant() {\n      console.log('Video chat room loading...');\n\n      var _this = this;\n\n      var axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\"); // Request a new token\n\n\n      axios.get(\"/api/video/access_token/\".concat(this.name)).then(function (response) {\n        _this.accessToken = response.data;\n      })[\"catch\"](function (error) {\n        console.log(error);\n      }).then(function () {\n        _this.joinToRoom();\n      });\n    },\n    connectToRoom: function connectToRoom() {\n      var _this2 = this;\n\n      var axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\n      var _require = __webpack_require__(/*! twilio-video */ \"./node_modules/twilio-video/es5/index.js\"),\n          connect = _require.connect,\n          createLocalVideoTrack = _require.createLocalVideoTrack;\n\n      connect(this.accessToken, {\n        name: this.name\n      }).then(function (room) {\n        console.log(\"Successfully joined a Room: \".concat(room));\n        console.log(\"Data::\", room.sid);\n        _this2.roomSid = room.sid;\n        var request = {\n          room_name: _this2.name,\n          room_sid: room.sid,\n          room_status: \"ON_GOING\"\n        };\n        axios.post(\"/api/video/history/save\", request).then(function (response) {\n          console.log(response);\n        })[\"catch\"](function (err) {\n          console.log(err);\n        });\n        var videoChatWindow = document.getElementById('my-video-chat-window');\n        createLocalVideoTrack().then(function (track) {\n          videoChatWindow.appendChild(track.attach());\n        });\n        room.on('participantConnected', function (participant) {\n          console.log(\"Participant \\\"\".concat(participant.identity, \"\\\" connected\"));\n          participant.tracks.forEach(function (publication) {\n            if (publication.isSubscribed) {\n              var track = publication.track;\n              videoChatWindow.appendChild(track.attach());\n            }\n          });\n          participant.on('trackSubscribed', function (track) {\n            videoChatWindow.appendChild(track.attach());\n          });\n        });\n      }, function (error) {\n        console.error(\"Unable to connect to Room: \".concat(error.message));\n      });\n    },\n    joinToRoom: function joinToRoom() {\n      var _this3 = this;\n\n      var axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\n      var _require2 = __webpack_require__(/*! twilio-video */ \"./node_modules/twilio-video/es5/index.js\"),\n          connect = _require2.connect;\n\n      connect(this.accessToken, {\n        name: this.name,\n        video: false,\n        audio: false\n      }).then(function (room) {\n        console.log(\"Successfully joined a Room: \".concat(room));\n        console.log(\"Data::\", room.sid);\n        _this3.roomSid = room.sid;\n        var videoChatWindow = document.getElementById('my-video-chat-window');\n        var localParticipant = room.localParticipant;\n        console.log(\"Connected to the Room as LocalParticipant \\\"\".concat(localParticipant.identity, \"\\\"\"));\n        room.participants.forEach(function (participant) {\n          participant.tracks.forEach(function (publication) {\n            if (publication.track) {\n              videoChatWindow.appendChild(publication.track.attach());\n            }\n          });\n          participant.on('trackSubscribed', function (track) {\n            videoChatWindow.appendChild(track.attach());\n          });\n        });\n      }, function (error) {\n        console.error(\"Unable to connect to Room: \".concat(error.message));\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    var axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\n    _this = this;\n    console.log(\"NAME:\", _this.name);\n    axios.get(\"/api/video/\" + _this.name).then(function (response) {\n      console.log(response);\n\n      _this4.joinAsParticipant();\n    })[\"catch\"](function (err) {\n      console.log(err.response);\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/video/VideoChat.vue?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/video/VideoChat.vue?vue&type=template&id=37363be6&":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/video/VideoChat.vue?vue&type=template&id=37363be6& ***!
  \*************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"p-5 text-center\" }, [\n    _c(\"h1\", { staticClass: \"text-2xl mb-4\" }, [_vm._v(\"Laravel Video Chat\")]),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      {\n        staticClass: \"grid grid-flow-row grid-cols-3 grid-rows-3 gap-4 bg-black\"\n      },\n      [\n        _c(\"div\", { attrs: { id: \"my-video-chat-window\" } }, [\n          !_vm.accessToken && _vm.name\n            ? _c(\"button\", { on: { click: _vm.getVideoToken } }, [\n                _vm._v(\" Start Broadcasting \")\n              ])\n            : _vm._e()\n        ])\n      ]\n    ),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n      _c(\"div\", { staticClass: \"col-md-10\" }, [\n        _c(\"div\", { staticClass: \"card\" }, [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"card-body\" }, [\n              _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.connected,\n                      expression: \"connected\"\n                    }\n                  ],\n                  staticClass: \"col-md-4 channel-list\"\n                },\n                [\n                  _c(\n                    \"ul\",\n                    [\n                      _vm._l(_vm.tc.channelArray, function(channel) {\n                        return _c(\n                          \"li\",\n                          {\n                            key: channel.id,\n                            ref: \"channelList\",\n                            refInFor: true,\n                            attrs: { \"data-sid\": channel.sid }\n                          },\n                          [\n                            _c(\n                              \"a\",\n                              {\n                                attrs: { href: \"#!\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.selectChannel(channel)\n                                  }\n                                }\n                              },\n                              [_vm._v(\" \" + _vm._s(channel.friendlyName) + \" \")]\n                            )\n                          ]\n                        )\n                      }),\n                      _vm._v(\" \"),\n                      _c(\n                        \"a\",\n                        {\n                          attrs: { href: \"#!\" },\n                          on: { click: _vm.createChannel }\n                        },\n                        [_vm._v(\" Add Channel\")]\n                      ),\n                      _vm._v(\" \"),\n                      _vm.showAddChannelInput\n                        ? _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.newChannel,\n                                expression: \"newChannel\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: { type: \"text\", placeholder: \"New Channel\" },\n                            domProps: { value: _vm.newChannel },\n                            on: {\n                              keyup: function($event) {\n                                if (\n                                  !$event.type.indexOf(\"key\") &&\n                                  $event.keyCode !== 13\n                                ) {\n                                  return null\n                                }\n                                return _vm.handleNewChannelInputKeypress($event)\n                              },\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.newChannel = $event.target.value\n                              }\n                            }\n                          })\n                        : _vm._e()\n                    ],\n                    2\n                  )\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-md-8\" }, [\n                _c(\"div\", { staticClass: \"message-box\" }, [\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.showMessages,\n                          expression: \"showMessages\"\n                        }\n                      ],\n                      staticClass: \"message-div\"\n                    },\n                    _vm._l(_vm.tc.messagesArray, function(message) {\n                      return _c(\n                        \"div\",\n                        { key: message.id, staticClass: \"row msg\" },\n                        [\n                          _c(\"div\", { staticClass: \"media-body\" }, [\n                            _c(\"small\", { staticClass: \"pull-right time\" }, [\n                              _c(\"i\", { staticClass: \"fa fa-clock-o\" }),\n                              _vm._v(\n                                _vm._s(_vm.moment(message.timestamp).fromNow())\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"h5\", { staticClass: \"media-heading\" }, [\n                              _vm._v(_vm._s(message.author))\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"small\", { staticClass: \"col-sm-11\" }, [\n                              _vm._v(_vm._s(message.body))\n                            ])\n                          ])\n                        ]\n                      )\n                    }),\n                    0\n                  ),\n                  _vm._v(\" \"),\n                  _vm.notification\n                    ? _c(\"p\", [_vm._v(_vm._s(_vm.notificationMsg))])\n                    : _vm._e()\n                ]),\n                _vm._v(\" \"),\n                _vm.userNotJoined\n                  ? _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.username,\n                          expression: \"username\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: { type: \"text\", placeholder: \"Your username\" },\n                      domProps: { value: _vm.username },\n                      on: {\n                        keyup: function($event) {\n                          if (\n                            !$event.type.indexOf(\"key\") &&\n                            $event.keyCode !== 13\n                          ) {\n                            return null\n                          }\n                          return _vm.connectClientWithUsername($event)\n                        },\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.username = $event.target.value\n                        }\n                      }\n                    })\n                  : _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.message,\n                          expression: \"message\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: { type: \"text\", placeholder: \"Your message\" },\n                      domProps: { value: _vm.message },\n                      on: {\n                        keyup: function($event) {\n                          if (\n                            !$event.type.indexOf(\"key\") &&\n                            $event.keyCode !== 13\n                          ) {\n                            return null\n                          }\n                          return _vm.handleInputTextKeypress($event)\n                        },\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.message = $event.target.value\n                        }\n                      }\n                    })\n              ])\n            ])\n          ])\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/video/VideoChat.vue?vue&type=template&id=37363be6&\n");

/***/ }),

/***/ "./resources/js/pages/video/VideoChat.vue":
/*!************************************************!*\
  !*** ./resources/js/pages/video/VideoChat.vue ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _VideoChat_vue_vue_type_template_id_37363be6___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./VideoChat.vue?vue&type=template&id=37363be6& */ \"./resources/js/pages/video/VideoChat.vue?vue&type=template&id=37363be6&\");\n/* harmony import */ var _VideoChat_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./VideoChat.vue?vue&type=script&lang=js& */ \"./resources/js/pages/video/VideoChat.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _VideoChat_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _VideoChat_vue_vue_type_template_id_37363be6___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _VideoChat_vue_vue_type_template_id_37363be6___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"resources/js/pages/video/VideoChat.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvdmlkZW8vVmlkZW9DaGF0LnZ1ZT81NDIwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXdGO0FBQzNCO0FBQ0w7OztBQUd4RDtBQUNnRztBQUNoRyxnQkFBZ0IsMkdBQVU7QUFDMUIsRUFBRSwrRUFBTTtBQUNSLEVBQUUsb0ZBQU07QUFDUixFQUFFLDZGQUFlO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsSUFBSSxLQUFVLEVBQUUsWUFpQmY7QUFDRDtBQUNlLGdGIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL3BhZ2VzL3ZpZGVvL1ZpZGVvQ2hhdC52dWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1ZpZGVvQ2hhdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MzczNjNiZTYmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vVmlkZW9DaGF0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vVmlkZW9DaGF0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiL3Zhci93d3cvdGlrLXRvay10YXJvdC9ub2RlX21vZHVsZXMvdnVlLWhvdC1yZWxvYWQtYXBpL2Rpc3QvaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCczNzM2M2JlNicpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCczNzM2M2JlNicsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCczNzM2M2JlNicsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vVmlkZW9DaGF0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0zNzM2M2JlNiZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCczNzM2M2JlNicsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicmVzb3VyY2VzL2pzL3BhZ2VzL3ZpZGVvL1ZpZGVvQ2hhdC52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/pages/video/VideoChat.vue\n");

/***/ }),

/***/ "./resources/js/pages/video/VideoChat.vue?vue&type=script&lang=js&":
/*!*************************************************************************!*\
  !*** ./resources/js/pages/video/VideoChat.vue?vue&type=script&lang=js& ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_VideoChat_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./VideoChat.vue?vue&type=script&lang=js& */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/video/VideoChat.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_VideoChat_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvdmlkZW8vVmlkZW9DaGF0LnZ1ZT8wMTcxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQSx3Q0FBK0wsQ0FBZ0IscVBBQUcsRUFBQyIsImZpbGUiOiIuL3Jlc291cmNlcy9qcy9wYWdlcy92aWRlby9WaWRlb0NoYXQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNC0wIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vVmlkZW9DaGF0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS00LTAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9WaWRlb0NoYXQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/pages/video/VideoChat.vue?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./resources/js/pages/video/VideoChat.vue?vue&type=template&id=37363be6&":
/*!*******************************************************************************!*\
  !*** ./resources/js/pages/video/VideoChat.vue?vue&type=template&id=37363be6& ***!
  \*******************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_VideoChat_vue_vue_type_template_id_37363be6___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./VideoChat.vue?vue&type=template&id=37363be6& */ \"./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/video/VideoChat.vue?vue&type=template&id=37363be6&\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_VideoChat_vue_vue_type_template_id_37363be6___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_VideoChat_vue_vue_type_template_id_37363be6___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvdmlkZW8vVmlkZW9DaGF0LnZ1ZT9lODcwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiIuL3Jlc291cmNlcy9qcy9wYWdlcy92aWRlby9WaWRlb0NoYXQudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTM3MzYzYmU2Ji5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9WaWRlb0NoYXQudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTM3MzYzYmU2JlwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/pages/video/VideoChat.vue?vue&type=template&id=37363be6&\n");

/***/ })

}]);